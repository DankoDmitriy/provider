package com.danko.provider.domain.dao;

import com.danko.provider.domain.entity.UserAction;
import com.danko.provider.exception.DaoException;

import java.util.List;

/**
 * Dao for actions table
 */
public interface UserActionDao extends BaseDao<Long, UserAction> {
    /**
     * Select user action
     *
     * @param userId user id
     * @return list of found entities or empty list.
     * @throws DaoException is thrown when error while query execution occurs
     */
    List<UserAction> findAllByUserIdLimit(long userId) throws DaoException;

    /**
     * Add user action
     *
     * @param userAction
     * @param userId     user id
     * @param tariffId   tariff id
     * @return generated by DBMS entity id or -1 if entity has no autogenerated id
     * @throws DaoException is thrown when error while query execution occurs
     */
    long add(UserAction userAction, long userId, long tariffId) throws DaoException;

    /**
     * Count rows in table
     *
     * @param userId user id
     * @return
     * @throws DaoException is thrown when error while query execution occurs
     */
    long rowsInTableForUser(long userId) throws DaoException;

    /**
     * Method select data for pagination
     *
     * @param userId        user id
     * @param startPosition Sampling start position
     * @param rows          count select rows from table
     * @return list of found entities or empty list.
     * @throws DaoException is thrown when error while query execution occurs
     */
    List<UserAction> findAllByUserIdPageLimit(long userId, long startPosition, long rows) throws DaoException;
}
