package com.danko.provider.domain.dao;

import com.danko.provider.domain.entity.AbstractEntity;
import com.danko.provider.exception.DaoException;

import java.util.List;
import java.util.Optional;

/**
 * Dao interface with base methods
 *
 * @param <T> entity type must extend AbstractEntity
 */
public interface BaseDao<K, T extends AbstractEntity> {
    /**
     * Selects all entities
     *
     * @return list of found entities or empty list.
     * @throws DaoException is thrown when error while query execution occurs
     */
    List<T> findAll() throws DaoException;

    /**
     * Finds entity by id
     *
     * @param id entity id
     * @return returns optional with entity or empty optional
     * @throws DaoException is thrown when error while query execution occurs
     */
    Optional<T> findById(K id) throws DaoException;

    /**
     * Updates entity
     *
     * @param t entity
     * @return true when update process finish correct
     * @throws DaoException is thrown when error while query execution occurs
     */
    boolean update(T t) throws DaoException;

    /**
     * Inserts new entity
     *
     * @param t entity
     * @return generated by DBMS entity id or -1 if entity has no autogenerated id
     * @throws DaoException is thrown when error while query execution occurs
     */
    long add(T t) throws DaoException;
}
